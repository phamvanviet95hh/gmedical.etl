plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'gmedical.etl'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

}
configurations.all {
    exclude group: "org.slf4j", module: "slf4j-reload4j"
}

repositories {
    mavenCentral()
    maven {
        url 'https://repository.apache.org/content/repositories/releases/'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.minio:minio:8.5.5'

    // https://mvnrepository.com/artifact/org.json/json
    implementation("org.json:json:20090211")

// === Flink 1.20.1 ===
    implementation('org.apache.flink:flink-streaming-java:1.19.0') {
        exclude group: 'org.slf4j', module: 'slf4j-reload4j'
    }
    implementation('org.apache.flink:flink-table-api-java-bridge:1.19.0') {
        exclude group: 'org.slf4j', module: 'slf4j-reload4j'
    }
    implementation('org.apache.flink:flink-table-common:1.19.0') {
        exclude group: 'org.slf4j', module: 'slf4j-reload4j'
    }
    implementation('org.apache.flink:flink-table-runtime:1.19.0') {
        exclude group: 'org.slf4j', module: 'slf4j-reload4j'
    }
    implementation('org.apache.flink:flink-table-planner-loader:1.19.0') {
        exclude group: 'org.slf4j', module: 'slf4j-reload4j'
    }

// === Iceberg 1.9.1 ===
    implementation('org.apache.iceberg:iceberg-core:1.9.1'){
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
    implementation('org.apache.iceberg:iceberg-flink-runtime-1.19:1.9.1')
    implementation('org.apache.hadoop:hadoop-client:3.4.1')

// Exclude conflicting dependencies
    configurations.all {
        exclude group: 'org.slf4j', module: 'slf4j-reload4j'
    }


    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.2'

    // https://mvnrepository.com/artifact/javax.xml.parsers/jaxp-api
    implementation("javax.xml.parsers:jaxp-api:1.4.5")

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.19.0")



    implementation 'javax.servlet:javax.servlet-api:4.0.1'



    // Chuyển đổi dữ liệu
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

bootRun {
    jvmArgs = [
            "--add-exports=java.base/sun.nio.ch=ALL-UNNAMED"
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}
